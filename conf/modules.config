/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'WGSIM' {
        ext.args = "-N 500000 -1 100 -2 100"
    }

    withName: 'BWA_MEM' {
        ext.args = {
            def sample = meta.sample ?: meta.id
            "-R \"@RG\\tID:${sample}\\tSM:${sample}\\tPL:illumina\\tLB:${sample}\""
        }
        ext.prefix = {
            def sample = meta.sample ?: meta.id
            def variant = meta.simulatedvar ?: ''
            "${sample}${variant}"
        }
    }

    withName: 'SAMTOOLS_SORT'{
        ext.prefix = {
            def sample = meta.sample ?: meta.id
            def variant = meta.simulatedvar ?: ''
            "${sample}${variant}_sorted"
        }
    }

    withName: 'GATK4_MARKDUPLICATES' {
        ext.args   = '-REMOVE_DUPLICATES false -VALIDATION_STRINGENCY LENIENT'
        ext.prefix = {
            def sample = meta.sample ?: meta.id
            def variant = meta.simulatedvar ?: ''
            "${sample}_${variant}_md.bam"
        }
    }

    withName: 'GATK4_APPLYBQSR' {
        ext.prefix = {
            def sample = meta.sample ?: meta.id
            def variant = meta.simulatedvar ?: ''
            "${sample}${variant}_recal"
        }
    }

    withName: '.*:FASTQ_VARIANT_TO_VALIDATION:GATK4_HAPLOTYPECALLER' {
        ext.prefix = { "${meta.sample}_${meta.simulatedvar}"}
        ext.args   = "-ERC GVCF"
    }

    withName: 'SAMTOOLS_FAIDX_SUBSET' {
        ext.args = {
            "${meta.chromosome} > ${meta.id}_${meta.chromosome}.fasta"
        }
    }

    withName: 'GATK4_SELECTVARIANTS_GNOMAD' {
        ext.prefix = { "${meta.id}_${meta.chromosome}_gnomad" }
    }

    withName: 'GATK4_SELECTVARIANTS_MILLS' {
        ext.prefix = { "${meta.id}_${meta.chromosome}_mills" }
    }

    withName: 'GATK4_SELECTVARIANTS_1000G' {
        ext.prefix = { "${meta.id}_${meta.chromosome}_1000g" }
    }

    withName: 'GATK4_SELECTVARIANTS_DBSNP' {
        ext.prefix = { "${meta.id}_${meta.chromosome}_dbsnp" }
    }

    withName: 'SUBSETGFF' {
        memory = { 32.GB * task.attempt }
    }

    withName: 'AISCENARIOS' {
        ext.prefix = {
            def variant = meta.simulatedvar ?: ''
            def genes = meta.genes ?: ''

            if (meta.type == "dna") {
                "scenario_${variant}"
            } else {
                def genePrefix = genes.split(',').take(5).join('_')
                "scenario_${genePrefix}"
            }
        }
    }

}

env {
        GOOGLE_GENAI_API_KEY=secrets.GOOGLE_GENAI_API_KEY
    }
