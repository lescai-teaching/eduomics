// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core subworkflows test subset_references_to_targets
nextflow_workflow {

    name "Test Subworkflow SUBSET_REFERENCES_TO_TARGETS"
    script "../main.nf"
    config "subworkflows/local/subset_references_to_targets/tests/test.config"
    workflow "SUBSET_REFERENCES_TO_TARGETS"

    tag "subworkflows"
    tag "subworkflows/subset_references_to_targets"
    tag "subworkflow/subvar"
    tag "samtools"
    tag "samtools/faidx"
    tag "gatk4/"
    tag "gatk4/selectvariants"


    test("human - fasta/BED/VCF (dbsnp) - subset by chr") {

        when {
            workflow {
                """
                // ch_fasta        [mandatory] [ val(meta), [ fasta ] ]
                input[0] = Channel.value([
                    [ id:'test', chromosome:'chr22' ],
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/chr22_q11-21_GRCh38.fasta', checkIfExists: true)
                ])
                // ch_fai          [optional]  [ val(meta), [fai] ]
                input[1] = Channel.value([
                    [ id:'test', chromosome:'chr22' ],
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/chr22_q11-21_GRCh38.fasta.fai', checkIfExists: true)
                ])
                // ch_get_sizes
                input[2] = Channel.value(true)

                // ch_capture_bed - twist capture for exome
                input[3] = Channel.value(file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/Twist_Exome_Target2_chr22q11-21_GRCh38.bed', checkIfExists: true))

                // ch_chromosome
                input[4] = Channel.value([ [ id:'test' ], 'chr22' ])

                // ch_dbsnp
                input[5] = Channel.value([
                    [ id:'test' ],
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/dbsnp_146_chr22_q11-21_fixed.vcf.gz', checkIfExists: true),
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/dbsnp_146_chr22_q11-21_fixed.vcf.gz', checkIfExists: true),
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/Twist_Exome_Target2_chr22q11-21_GRCh38.bed', checkIfExists: true)
                ])
                // ch_gnomad
                input[5] = Channel.value([
                    [ id:'gnomad' ],
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/af-only-gnomad_chr22_q11-21_GRCh38.vcf.gz', checkIfExists: true),
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/af-only-gnomad_chr22_q11-21_GRCh38.vcf.gz.tbi', checkIfExists: true)
                ])
                // ch_mills
                input[6] = Channel.value([
                    [ id:'mills' ],
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/Mills_and_1000G_gold_standard.indels.hg38_chr22q11-21_fixed.vcf.gz', checkIfExists: true),
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/Mills_and_1000G_gold_standard.indels.hg38_chr22q11-21_fixed.vcf.gz.tbi', checkIfExists: true)
                ])
                // ch_1000g
                input[7] = Channel.value([
                    [ id:'1000g' ],
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/1000G_omni2_5_chr22_q11-21_GRCh38.vcf.gz', checkIfExists: true),
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/gatk_bundle/1000G_omni2_5_chr22_q11-21_GRCh38.vcf.gz.tbi', checkIfExists: true)
                ])
                // ch_clinvar_vcf
                input[6] = Channel.value([
                    [ id:'clinvar' ],
                    file('https://github.com/lescai-teaching/eduomics_testdata/blob/main/dna/clinvar_data/clinvar_20250317_chr22q11-21.vcf.gz', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.out.target_fa },
                { assert workflow.out.target_fai },
                { assert workflow.out.target_sizes },
                { assert workflow.out.capture_bed_gz },
                { assert workflow.out.capture_bed_index },
                { assert workflow.out.target_bed },
                { assert workflow.out.target_bed_pad50 },
                { assert workflow.out.target_bed_pad500 },
                { assert workflow.out.target_gnomad_vcf },
                { assert workflow.out.target_gnomad_tbi },
                { assert workflow.out.target_mills_vcf },
                { assert workflow.out.target_mills_tbi },
                { assert workflow.out.target_1000g_vcf },
                { assert workflow.out.target_1000g_tbi },
                { assert workflow.out.target_dbsnp_vcf },
                { assert workflow.out.target_dbsnp_tbi },
                { assert workflow.out.clinvar_benign_vcf },
                { assert workflow.out.clinvar_pathogenic_vcf },
                { assert workflow.out.clinvar_selected_vcf },
                { assert workflow.out.versions }
           )
        }
    }
}
