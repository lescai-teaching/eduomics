nextflow_process {

    name "Test Process COUNTMATRICES"
    script "../main.nf"
    process "COUNTMATRICES"

    tag "modules"
    tag "modules_"
    tag "countmatrices"

    test("countmatrices - counting") {

        when {
            process {
                """
                input[0] = [
                [ id:'test', chromosome: 'chr22', coverage: 30, reps: 3, groups: 2, simthreshold: 0.3 ], // meta map
                file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/gencode_transcripts_noversion_chr22.fasta', checkIfExists: true)
                ]
                input[1] = [
                [ id:'test', chromosome: 'chr22', coverage: 30, reps: 3, groups: 2, simthreshold: 0.3 ], // meta map
                file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/transcriptData_chr22.rds', checkIfExists: true)
                ]
                input[2] = [
                [ id:'test', chromosome: 'chr22', coverage: 30, reps: 3, groups: 2, simthreshold: 0.3 ], // meta map
                file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/small_gene_lists.rds', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.simcountMatrix },
                { assert process.out.simAnnords },
                { assert process.out.simcountMatrix.get(0) && process.out.simcountMatrix.get(0).size() > 0 },
                { assert process.out.simAnnords.get(0) && process.out.simAnnords.get(0).size() > 0 },
                { assert process.out.versions && process.out.versions.size() > 0 }
            )
        }

    }

    test("countmatrices - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                [ id:'test', chromosome: 'chr22', coverage: 30, reps: 3, groups: 2, simthreshold: 0.3 ], // meta map
                file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/gencode_transcripts_noversion_chr22.fasta', checkIfExists: true)
                ]
                input[1] = [
                [ id:'test', chromosome: 'chr22', coverage: 30, reps: 3, groups: 2, simthreshold: 0.3 ], // meta map
                file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/transcriptData_chr22.rds', checkIfExists: true)
                ]
                input[2] = [
                [ id:'test', chromosome: 'chr22', coverage: 30, reps: 3, groups: 2, simthreshold: 0.3 ], // meta map
                file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/small_gene_lists.rds', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.simcountMatrix },
                { assert process.out.simAnnords },
                { assert process.out.simcountMatrix.get(0) && process.out.simcountMatrix.get(0).size() > 0 },
                { assert process.out.simAnnords.get(0) && process.out.simAnnords.get(0).size() > 0 },
                { assert process.out.versions && process.out.versions.size() > 0 }
            )
        }

    }

}
