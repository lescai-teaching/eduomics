nextflow_process {

    name "Test Process SIMUSCOP_SIMUREADS"
    script "../main.nf"
    process "SIMUSCOP_SIMUREADS"

    tag "modules"
    tag "modules_"
    tag "simuscop"
    tag "simuscop/simureads"

    test("simulate reads") {

        when {
            process {
                """
                input[0] = [
                    [ id:'sim01', coverage: 50, reps: 3, groups: 2 ], // meta map
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/simureads/chr21_q11-21_test.profile', checkIfExists: true),
                ]
                input[1] = [
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/chr22_q11-21_GRCh38.fasta', checkIfExists: true),
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/chr22_q11-21_GRCh38.fasta.fai', checkIfExists: true),
                ]
                input[2] = [
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/simureads/simvar_case_single.txt', checkIfExists: true),
                ]
                input[3] = [
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/Twist_Exome_Target2_chr22q11-21_GRCh38_500pad.bed', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.reads.get(0).get(1).first().endsWith('.fq.gz') },
                { assert process.out.versions }
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("simulate reads - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'sim01', coverage: 50, reps: 3, groups: 2 ], // meta map
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/simureads/chr21_q11-21_test.profile', checkIfExists: true),
                ]
                input[1] = [
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/chr22_q11-21_GRCh38.fasta', checkIfExists: true),
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/chr22_q11-21_GRCh38.fasta.fai', checkIfExists: true),
                ]
                input[2] = [
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/simureads/simvar_case_single.txt', checkIfExists: true),
                ]
                input[3] = [
                    file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/dna/Twist_Exome_Target2_chr22q11-21_GRCh38_50pad.bed', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.reads.get(0).get(1).first().endsWith('.fq.gz') },
                { assert process.out.versions }
            )
        }

    }

}
