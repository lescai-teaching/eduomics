nextflow_process {

    name "Test Process DESEQ2_SALMON"
    script "../main.nf"
    process "DESEQ2_SALMON"
    config "./test.config"

    tag "modules"
    tag "modules_nfcore"
    tag "deseq2"
    tag "salmon"

    setup {
        run("SALMON_QUANT") {
            script "../../../nf-core/salmon/quant/main.nf"
            process {
                """
                input[0] = Channel.fromFilePairs(
                    [
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_01_1.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_01_2.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_02_1.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_02_2.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_03_1.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_03_2.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_04_1.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_04_2.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_05_1.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_05_2.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_06_1.fasta.gz', checkIfExists: true),
                        file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/raw_reads/sample_06_2.fasta.gz', checkIfExists: true)
                    ]
                    .map { sample_id, files ->
                        def meta = [id: 'simtest', sample: sample_id, single_end: false, reps: 3, groups: 2]
                        [meta, files]
                    }
                input[1] = Channel.fromPath('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/salmonquantify/chr22_transcripts_index/', type: 'dir')
                input[2] = Channel.value(file('/workspaces/eduomics/testdata/chr22.gff3', checkIfExists: true))
                input[3] = Channel.value(file('/workspaces/eduomics/testdata/gencode_transcripts_noversion_chr22.fasta', checkIfExists: true))
                input[4] = false
                input[5] = Channel.value("IU")
                """
            }
        }
    }

    test("deseq2_salmon - run") {

        when {
            process {
                """
                input[0] = SALMON_QUANT.out.results.map{ m, folder ->
                              def newmap = [id: m.id, genes: m.genes, groups: m.groups]
                              [newmap, folder]
                           }
                           .groupTuple(by: 0)
                input[1] = file("https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/gff3_chr22.rds", checkIfExists: true)
                """
            }
        }

        then {
            assert process.success
            assert path("deseq2_results").exists()
            assert path("deseq2_results/deseq2_results.tsv").exists()
            assert path("deseq2_results/ma_plot.pdf").exists()
            assert path("deseq2_results/dispersion_plot.pdf").exists()
            assert path("deseq2_results/count_plot.pdf").exists()
            assert path("deseq2_results/heatmap_plot.pdf").exists()
            assert path("deseq2_results/pca_plot.pdf").exists()
            assert path("versions.yml").exists()
        }
    }

    test("deseq2_salmon - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = SALMON_QUANT.out.results.collect()
                input[1] = file("https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/countmatrices/gff3_chr22.rds", checkIfExists: true)
                """
            }
        }

        then {
            assert process.success
            assert path("deseq2_results").exists()
            assert path("deseq2_results/deseq2_results.tsv").exists()
            assert path("deseq2_results/ma_plot.pdf").exists()
            assert path("deseq2_results/dispersion_plot.pdf").exists()
            assert path("deseq2_results/count_plot.pdf").exists()
            assert path("deseq2_results/heatmap_plot.pdf").exists()
            assert path("deseq2_results/pca_plot.pdf").exists()
            assert path("versions.yml").exists()
        }
    }
}
