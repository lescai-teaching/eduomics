nextflow_process {

    name "Test Process SUBSETFASTATX"
    script "../main.nf"
    process "SUBSETFASTATX"

    tag "modules"
    tag "modules_"
    tag "subsetfastatx"

    test("subsetfastatx - fasta") {

        when {
            process {
                """
                input[0] = [ id:'test', chromosome:'chr22' ]
                input[1] = file('https://github.com/lescai-teaching/eduomics_testdata/raw/refs/heads/main/rnaseq/subsetfastatx/gencode_transcripts_noversion_chr21_chr22.fasta', checkIfExists: true)
                input[2] = file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/subsetfastatx/gencode_chr21_chr22_v47.gff3', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.fasta.get(0).getName().endsWith('.fasta') },
                { assert process.out.versions }
            )
        }

    }

    test("subsetfastatx - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ id:'test', chromosome:'chr22']
                input[1] = file('https://github.com/lescai-teaching/eduomics_testdata/raw/refs/heads/main/rnaseq/subsetfastatx/gencode_transcripts_noversion_chr21_chr22.fasta', checkIfExists: true)
                input[2] = file('https://raw.githubusercontent.com/lescai-teaching/eduomics_testdata/refs/heads/main/rnaseq/subsetfastatx/gencode_chr21_chr22_v47.gff3', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.fasta.get(0).getName().endsWith('.fasta') },
                { assert process.out.versions }
            )
        }

    }

}
